/*
The goal of this exercise is to familiarize you with adversaries in Tamarin. 
It is recommended that you regularly reload the model to check syntax.
*/

theory ExerciseSymmetricEncryption
begin

/*
The symmetric encryption message theory defines the functions senc/2 and sdec/2 
satisfying the equation sdec(senc(m, k), k) = m.
*/
builtins: symmetric-encryption


/*
The KeyGen rule lets a participant A generate a fresh secret key and store it 
using the fact !LongTermKey. Note that facts that do not start with '!' can only
be used once. Fill in the premise and conclusion.
*/

rule KeyGen:
  []
  -->
  []


/*
In the rule SendMsg, we want to participant $A to send a message ~m 
symmetrically encrypted under the key generated using KeyGen. Fill in the 
premise and conclusion.
*/

rule SendMsg:
  []
  --[ // MessageWasSentBy($A, ~msg)
    ]->
  []


/*
The secrecy lemma ensures that an advarsary can not learn the message sent.
*/

lemma Secrecy:
  "All p m #t. MessageWasSentBy(p, m) @ #t ==> not Ex #x. K(m) @ #x"

end

/*
At this point, try verifying the Tamarin rules! 
To launch Tamarin, execute this command:
tamarin-prover interactive ex1/
*/